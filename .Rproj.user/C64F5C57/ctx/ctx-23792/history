#THIS PART WAS REPLICATED & EXTENDED FROM THE ABOVE:
else if(input$landfallCheckbox == TRUE & input$checkbox2005 == FALSE){ #TRUE
#user selected hurricane, show hurricane on map
if(input$hurrTop != "All" & input$hurrTop != ""){
updateSelectInput(session,"hurrYear",choices=append("All",seq(dataRange2005[1],dataRange2005[2],by=1)), selected="")
updateSelectInput(session,"hurrName",choices=append("All",as.character(hurMaxSpeed$hur_name)), selected="")
dataCol2005[dataCol2005$hur_code==input$hurrTop & dataCol2005$landfall == 'yes' & dataCol2005$type=='N',]
}
#user selected All, show all hurricane
else if(input$hurrTop == "All" & input$hurrTop!=""){
updateSelectInput(session,"hurrYear",choices=append("All",seq(dataRange2005[1],dataRange2005[2],by=1)), selected="")
updateSelectInput(session,"hurrName",choices=append("All",as.character(hurMaxSpeed$hur_name)), selected="")
dataCol2005[dataCol2005$hur_code %in% hurTop10$hur_code & dataCol2005$landfall == 'yes' & dataCol2005$type=='N',]
}
#user selected hurrYear = All and hurrName = "All"
else if(input$hurrYear == "All" & input$hurrName == "All"){
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
dataCol2005[dataCol2005$landfall == 'yes' & dataCol2005$type=='N',]
}
#user selected hurrName = All, hurrYear to a year
else if (input$hurrName == "All" & input$hurrYear != "All"){  #filter by year:
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
dataYear <- dataCol2005[year(dataCol2005$date)==input$hurrYear & dataCol2005$landfall == 'yes' & dataCol2005$type=='N',]
#updateSelectInput(session,"hurrName",choices=append("All",as.character(dataYear$hur_name)), selected="All")
dataYear
}
#user selected hurrName to a name, hurrYear = All
else if (input$hurrName != "All" & input$hurrYear == "All"){  #filter by name:
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
#updateSelectInput(session,"hurrName",choices=append("All",as.character(dataCol2005$hur_name)), selected="All")
dataCol2005[dataCol2005$hur_name==input$hurrName & dataCol2005$landfall == 'yes' & dataCol2005$type=='N',]
}
#user selected hurrName to a name, hurrYear to a year
else{
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
dataCol2005[year(dataCol2005$date)==input$hurrYear & dataCol2005$hur_name==input$hurrName & dataCol2005$landfall == 'yes' & dataCol2005$type=='N',]
}
}
# DUPLICATED FOR 2005 / ALL FILTER: (The 2005 checkbox is true:)
#THIS PART IS ORIGINAL:
else if(input$landfallCheckbox == FALSE){
#user selected hurricane, show hurricane on map
if(input$hurrTop != "All" & input$hurrTop != ""){
updateSelectInput(session,"hurrYear",choices=append("All",seq(dataRange2005[1],dataRange2005[2],by=1)), selected="")
updateSelectInput(session,"hurrName",choices=append("All",as.character(hurMaxSpeed$hur_name)), selected="")
ambersDataCol2005[ambersDataCol2005$hur_code==input$hurrTop & ambersDataCol2005$type=='N',]
}
#user selected All, show all hurricane
else if(input$hurrTop == "All" & input$hurrTop!=""){
updateSelectInput(session,"hurrYear",choices=append("All",seq(dataRange2005[1],dataRange2005[2],by=1)), selected="")
updateSelectInput(session,"hurrName",choices=append("All",as.character(hurMaxSpeed$hur_name)), selected="")
ambersDataCol2005[ambersDataCol2005$hur_code %in% hurTop10$hur_code & ambersDataCol2005$type=='N',]
}
#user selected hurrYear = All and hurrName = "All"
else if(input$hurrYear == "All" & input$hurrName == "All"){
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
ambersDataCol2005[ambersDataCol2005$type=='N',]
}
#user selected hurrName = All, hurrYear to a year
else if (input$hurrName == "All" & input$hurrYear != "All"){  #filter by year:
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
dataYear <- ambersDataCol2005[year(ambersDataCol2005$date)==input$hurrYear & ambersDataCol2005$type=='N',]
#updateSelectInput(session,"hurrName",choices=append("All",as.character(dataYear$hur_name)), selected="All")
dataYear
}
#user selected hurrName to a name, hurrYear = All
else if (input$hurrName != "All" & input$hurrYear == "All"){  #filter by name:
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
#updateSelectInput(session,"hurrName",choices=append("All",as.character(ambersDataCol2005$hur_name)), selected="All")
ambersDataCol2005[ambersDataCol2005$hur_name==input$hurrName & ambersDataCol2005$type=='N',]
}
#user selected hurrName to a name, hurrYear to a year
else{
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
ambersDataCol2005[year(ambersDataCol2005$date)==input$hurrYear & ambersDataCol2005$hur_name==input$hurrName & ambersDataCol2005$type=='N',]
}
} #end checkbox FALSE
else if (input$landfallCheckbox == TRUE){ #TRUE
#user selected hurricane, show hurricane on map
if(input$hurrTop != "All" & input$hurrTop != ""){
updateSelectInput(session,"hurrYear",choices=append("All",seq(dataRange2005[1],dataRange2005[2],by=1)), selected="")
updateSelectInput(session,"hurrName",choices=append("All",as.character(hurMaxSpeed$hur_name)), selected="")
ambersDataCol2005[ambersDataCol2005$hur_code==input$hurrTop & ambersDataCol2005$landfall == 'yes' & ambersDataCol2005$type=='N',]
}
#user selected All, show all hurricane
else if(input$hurrTop == "All" & input$hurrTop!=""){
updateSelectInput(session,"hurrYear",choices=append("All",seq(dataRange2005[1],dataRange2005[2],by=1)), selected="")
updateSelectInput(session,"hurrName",choices=append("All",as.character(hurMaxSpeed$hur_name)), selected="")
ambersDataCol2005[ambersDataCol2005$hur_code %in% hurTop10$hur_code & ambersDataCol2005$landfall == 'yes' & ambersDataCol2005$type=='N',]
}
#user selected hurrYear = All and hurrName = "All"
else if(input$hurrYear == "All" & input$hurrName == "All"){
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
ambersDataCol2005[ambersDataCol2005$landfall == 'yes' & ambersDataCol2005$type=='N',]
}
#user selected hurrName = All, hurrYear to a year
else if (input$hurrName == "All" & input$hurrYear != "All"){  #filter by year:
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
dataYear <- ambersDataCol2005[year(ambersDataCol2005$date)==input$hurrYear & ambersDataCol2005$landfall == 'yes' & ambersDataCol2005$type=='N',]
#updateSelectInput(session,"hurrName",choices=append("All",as.character(dataYear$hur_name)), selected="All")
dataYear
}
#user selected hurrName to a name, hurrYear = All
else if (input$hurrName != "All" & input$hurrYear == "All"){  #filter by name:
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
#updateSelectInput(session,"hurrName",choices=append("All",as.character(ambersDataCol2005$hur_name)), selected="All")
ambersDataCol2005[ambersDataCol2005$hur_name==input$hurrName & ambersDataCol2005$landfall == 'yes' & ambersDataCol2005$type=='N',]
}
#user selected hurrName to a name, hurrYear to a year
else{
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
ambersDataCol2005[year(ambersDataCol2005$date)==input$hurrYear & ambersDataCol2005$hur_name==input$hurrName & ambersDataCol2005$landfall == 'yes' & ambersDataCol2005$type=='N',]
}
}
}
#DUPLICATED FOR ATLANTIC OCEAN:
else{ #atlantic == TRUE
#THIS PART IS ORIGINAL:
if(input$landfallCheckbox == FALSE & input$checkbox2005 == FALSE){
#user selected hurricane, show hurricane on map
if(input$hurrTop != "All" & input$hurrTop != ""){
updateSelectInput(session,"hurrYear",choices=append("All",seq(dataRange2005[1],dataRange2005[2],by=1)), selected="")
updateSelectInput(session,"hurrName",choices=append("All",as.character(hurMaxSpeed$hur_name)), selected="")
dataCol2005[dataCol2005$hur_code==input$hurrTop & (dataCol2005$type=='A' | dataCol2005$type=='N'),]   #realized
}
#user selected All, show all hurricane
else if(input$hurrTop == "All" & input$hurrTop!=""){
updateSelectInput(session,"hurrYear",choices=append("All",seq(dataRange2005[1],dataRange2005[2],by=1)), selected="")
updateSelectInput(session,"hurrName",choices=append("All",as.character(hurMaxSpeed$hur_name)), selected="")
dataCol2005[dataCol2005$hur_code %in% hurTop10$hur_code & (dataCol2005$type=='A' | dataCol2005$type=='N'),]
}
#user selected hurrYear = All and hurrName = "All"
else if(input$hurrYear == "All" & input$hurrName == "All"){
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
dataCol2005[dataCol2005$type=='A' | dataCol2005$type=='N',]
}
#user selected hurrName = All, hurrYear to a year
else if (input$hurrName == "All" & input$hurrYear != "All"){  #filter by year:
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
dataYear <- dataCol2005[year(dataCol2005$date)==input$hurrYear & (dataCol2005$type=='A' | dataCol2005$type=='N'),]
#updateSelectInput(session,"hurrName",choices=append("All",as.character(dataYear$hur_name)), selected="All")
dataYear
}
#user selected hurrName to a name, hurrYear = All
else if (input$hurrName != "All" & input$hurrYear == "All"){  #filter by name:
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
#updateSelectInput(session,"hurrName",choices=append("All",as.character(dataCol2005$hur_name)), selected="All")
dataCol2005[dataCol2005$hur_name==input$hurrName & (dataCol2005$type=='A' | dataCol2005$type=='N'),]
}
#user selected hurrName to a name, hurrYear to a year
else{
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
dataCol2005[year(dataCol2005$date)==input$hurrYear & dataCol2005$hur_name==input$hurrName & (dataCol2005$type=='A' | dataCol2005$type=='N'),]
}
} #end checkbox FALSE
#THIS PART WAS REPLICATED & EXTENDED FROM THE ABOVE:
else if(input$landfallCheckbox == TRUE & input$checkbox2005 == FALSE){ #TRUE
#user selected hurricane, show hurricane on map
if(input$hurrTop != "All" & input$hurrTop != ""){
updateSelectInput(session,"hurrYear",choices=append("All",seq(dataRange2005[1],dataRange2005[2],by=1)), selected="")
updateSelectInput(session,"hurrName",choices=append("All",as.character(hurMaxSpeed$hur_name)), selected="")
dataCol2005[dataCol2005$hur_code==input$hurrTop & dataCol2005$landfall == 'yes' & (dataCol2005$type=='A' | dataCol2005$type=='N'),]
}
#user selected All, show all hurricane
else if(input$hurrTop == "All" & input$hurrTop!=""){
updateSelectInput(session,"hurrYear",choices=append("All",seq(dataRange2005[1],dataRange2005[2],by=1)), selected="")
updateSelectInput(session,"hurrName",choices=append("All",as.character(hurMaxSpeed$hur_name)), selected="")
dataCol2005[dataCol2005$hur_code %in% hurTop10$hur_code & dataCol2005$landfall == 'yes' & (dataCol2005$type=='A' | dataCol2005$type=='N'),]
}
#user selected hurrYear = All and hurrName = "All"
else if(input$hurrYear == "All" & input$hurrName == "All"){
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
dataCol2005[dataCol2005$landfall == 'yes' & (dataCol2005$type=='A' | dataCol2005$type=='N'),]
}
#user selected hurrName = All, hurrYear to a year
else if (input$hurrName == "All" & input$hurrYear != "All"){  #filter by year:
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
dataYear <- dataCol2005[year(dataCol2005$date)==input$hurrYear & dataCol2005$landfall == 'yes' & (dataCol2005$type=='A' | dataCol2005$type=='N'),]
#updateSelectInput(session,"hurrName",choices=append("All",as.character(dataYear$hur_name)), selected="All")
dataYear
}
#user selected hurrName to a name, hurrYear = All
else if (input$hurrName != "All" & input$hurrYear == "All"){  #filter by name:
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
#updateSelectInput(session,"hurrName",choices=append("All",as.character(dataCol2005$hur_name)), selected="All")
dataCol2005[dataCol2005$hur_name==input$hurrName & dataCol2005$landfall == 'yes' & (dataCol2005$type=='A' | dataCol2005$type=='N'),]
}
#user selected hurrName to a name, hurrYear to a year
else{
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
dataCol2005[year(dataCol2005$date)==input$hurrYear & dataCol2005$hur_name==input$hurrName & dataCol2005$landfall == 'yes' & (dataCol2005$type=='A' | dataCol2005$type=='N'),]
}
}
# DUPLICATED FOR 2005 / ALL FILTER: (The 2005 checkbox is true:)
#THIS PART IS ORIGINAL:
else if(input$landfallCheckbox == FALSE){
#user selected hurricane, show hurricane on map
if(input$hurrTop != "All" & input$hurrTop != ""){
updateSelectInput(session,"hurrYear",choices=append("All",seq(dataRange2005[1],dataRange2005[2],by=1)), selected="")
updateSelectInput(session,"hurrName",choices=append("All",as.character(hurMaxSpeed$hur_name)), selected="")
ambersDataCol2005[ambersDataCol2005$hur_code==input$hurrTop & (ambersDataCol2005$type=='A' | ambersDataCol2005$type=='N'),]
}
#user selected All, show all hurricane
else if(input$hurrTop == "All" & input$hurrTop!=""){
updateSelectInput(session,"hurrYear",choices=append("All",seq(dataRange2005[1],dataRange2005[2],by=1)), selected="")
updateSelectInput(session,"hurrName",choices=append("All",as.character(hurMaxSpeed$hur_name)), selected="")
ambersDataCol2005[ambersDataCol2005$hur_code %in% hurTop10$hur_code & (ambersDataCol2005$type=='A' | ambersDataCol2005$type=='N'),]
}
#user selected hurrYear = All and hurrName = "All"
else if(input$hurrYear == "All" & input$hurrName == "All"){
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
ambersDataCol2005[ambersDataCol2005$type=='A' | ambersDataCol2005$type=='N',]
}
#user selected hurrName = All, hurrYear to a year
else if (input$hurrName == "All" & input$hurrYear != "All"){  #filter by year:
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
dataYear <- ambersDataCol2005[year(ambersDataCol2005$date)==input$hurrYear & (ambersDataCol2005$type=='A' | ambersDataCol2005$type=='N'),]
#updateSelectInput(session,"hurrName",choices=append("All",as.character(dataYear$hur_name)), selected="All")
dataYear
}
#user selected hurrName to a name, hurrYear = All
else if (input$hurrName != "All" & input$hurrYear == "All"){  #filter by name:
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
#updateSelectInput(session,"hurrName",choices=append("All",as.character(ambersDataCol2005$hur_name)), selected="All")
ambersDataCol2005[ambersDataCol2005$hur_name==input$hurrName & (ambersDataCol2005$type=='A' | ambersDataCol2005$type=='N'),]
}
#user selected hurrName to a name, hurrYear to a year
else{
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
ambersDataCol2005[year(ambersDataCol2005$date)==input$hurrYear & ambersDataCol2005$hur_name==input$hurrName & (ambersDataCol2005$type=='A' | ambersDataCol2005$type=='N'),]
}
} #end checkbox FALSE
else if (input$landfallCheckbox == TRUE){ #TRUE
#user selected hurricane, show hurricane on map
if(input$hurrTop != "All" & input$hurrTop != ""){
updateSelectInput(session,"hurrYear",choices=append("All",seq(dataRange2005[1],dataRange2005[2],by=1)), selected="")
updateSelectInput(session,"hurrName",choices=append("All",as.character(hurMaxSpeed$hur_name)), selected="")
ambersDataCol2005[ambersDataCol2005$hur_code==input$hurrTop & ambersDataCol2005$landfall == 'yes' & (ambersDataCol2005$type=='A' | ambersDataCol2005$type=='N'),]
}
#user selected All, show all hurricane
else if(input$hurrTop == "All" & input$hurrTop!=""){
updateSelectInput(session,"hurrYear",choices=append("All",seq(dataRange2005[1],dataRange2005[2],by=1)), selected="")
updateSelectInput(session,"hurrName",choices=append("All",as.character(hurMaxSpeed$hur_name)), selected="")
ambersDataCol2005[ambersDataCol2005$hur_code %in% hurTop10$hur_code & ambersDataCol2005$landfall == 'yes' & (ambersDataCol2005$type=='A' | ambersDataCol2005$type=='N'),]
}
#user selected hurrYear = All and hurrName = "All"
else if(input$hurrYear == "All" & input$hurrName == "All"){
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
ambersDataCol2005[ambersDataCol2005$landfall == 'yes' & (ambersDataCol2005$type=='A' | ambersDataCol2005$type=='N'),]
}
#user selected hurrName = All, hurrYear to a year
else if (input$hurrName == "All" & input$hurrYear != "All"){  #filter by year:
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
dataYear <- ambersDataCol2005[year(ambersDataCol2005$date)==input$hurrYear & ambersDataCol2005$landfall == 'yes' & (ambersDataCol2005$type=='A' | ambersDataCol2005$type=='N'),]
#updateSelectInput(session,"hurrName",choices=append("All",as.character(dataYear$hur_name)), selected="All")
dataYear
}
#user selected hurrName to a name, hurrYear = All
else if (input$hurrName != "All" & input$hurrYear == "All"){  #filter by name:
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
#updateSelectInput(session,"hurrName",choices=append("All",as.character(ambersDataCol2005$hur_name)), selected="All")
ambersDataCol2005[ambersDataCol2005$hur_name==input$hurrName & ambersDataCol2005$landfall == 'yes' & (ambersDataCol2005$type=='A' | ambersDataCol2005$type=='N'),]
}
#user selected hurrName to a name, hurrYear to a year
else{
updateSelectInput(session,"hurrTop",choices=append("All",as.character(hurTop10$hur_code)), selected="")
ambersDataCol2005[year(ambersDataCol2005$date)==input$hurrYear & ambersDataCol2005$hur_name==input$hurrName & ambersDataCol2005$landfall == 'yes' & (ambersDataCol2005$type=='A' | ambersDataCol2005$type=='N'),]
}
}
}
}
)
#creates table for lineGraph of max wind speed
filterWindA <- reactive(
#get max windspeed per day for specified year
if(input$hurrYear != "All" ){
maxAtlantic <- data2005[data2005$type=="A" & year(data2005$date)==input$hurrYear,]
maxAtlantic <- maxAtlantic[,c("date","max_speed")]
maxAtlantic$day <- day(maxAtlantic$date)
maxAtlantic$month <- month(maxAtlantic$date)
maxAtlantic$year <- year(maxAtlantic$date)
maxAtlantic$date <- NULL
maxASpeed <- aggregate(. ~year+month+day,maxAtlantic,max)
maxASpeed$date <- paste(maxASpeed$year,maxASpeed$month,maxASpeed$day,sep="-") %>% ymd()
maxASpeed
}
#get max windspeed for all years
else{
maxAtlantic <- data2005[data2005$type=="A",]
maxAtlantic <- maxAtlantic[,c("date","max_speed")]
maxAtlantic$date <- year(maxAtlantic$date)
maxASpeed <- aggregate(. ~date,maxAtlantic,max)
maxASpeed
}
)
filterWindN <- reactive(
#get max windspeed per day for specified year
if(input$hurrYear != "All"){
maxNorth <- data2005[data2005$type=="N" & year(data2005$date)==input$hurrYear,]
maxNorth <- maxNorth[,c("date","max_speed")]
maxNorth$day <- day(maxNorth$date)
maxNorth$month <- month(maxNorth$date)
maxNorth$year <- year(maxNorth$date)
maxNorth$date <- NULL
if(nrow(maxNorth)==0 ){
maxNSpeed <- data.frame(date = as.Date(character()),
max_speed=integer())
}else{
maxNSpeed <- aggregate(. ~year+month+day,maxNorth, max)
maxNSpeed$date <- paste(maxNSpeed$year,maxNSpeed$month,maxNSpeed$day,sep="-") %>% ymd()
}
maxNSpeed
}
#get max windspeed for all years
else{
maxNorth <- data2005[data2005$type=="N" ,]
maxNorth <- maxNorth[,c("date","max_speed")]
maxNorth$date <- year(maxNorth$date)
maxNSpeed <- aggregate(. ~date,maxNorth, max)
maxNSpeed
}
)
filterMinA <- reactive(
if(input$hurrYear != "All"){
minAtlantic <- data2005[data2005$type =="A" & year(data2005$date)==input$hurrYear,]
minAtlantic <- minAtlantic[,c("date","min_pressure")]
minAtlantic$day <- day(minAtlantic$date)
minAtlantic$month <- month(minAtlantic$date)
minAtlantic$year <- year(minAtlantic$date)
minASpeed <-aggregate(. ~year+month+day,minAtlantic, max)
minASpeed$date <- paste(minASpeed$year,minASpeed$month,minASpeed$day,sep="-") %>% ymd()
minASpeed
}
else{
minAtlantic <- data2005[data2005$type=="A",]
minAtlantic <- minAtlantic[,c("date","min_pressure")]
minAtlantic$date <- year(minAtlantic$date)
minASpeed <- aggregate(. ~date, minAtlantic, max)
minASpeed
}
)
filterMinN <- reactive(
if(input$hurrYear != "All"){
minNorth <- data2005[data2005$type=="N" & year(data2005$date)==input$hurrYear, ]
minNorth <- minNorth[,c("date","min_pressure")]
minNorth$day <- day(minNorth$date)
minNorth$month <- month(minNorth$date)
minNorth$year <- year(minNorth$date)
if(nrow(minNorth)==0 ){
minNSpeed <- data.frame(date = as.Date(character()),
min_pressure=integer())
}else{
minNSpeed <- aggregate(. ~year+month+day, minNorth, max)
minNSpeed$date <- paste(minNSpeed$year,minNSpeed$month,minNSpeed$day,sep="-") %>% ymd()
}
minNSpeed
}
else{
minNorth <- data2005[data2005$type=='N',]
minNorth <- minNorth[,c("date","min_pressure")]
minNorth$date <- year(minNorth$date)
minNSpeed <- aggregate(. ~date, minNorth, max)
minNSpeed
}
)
#top10 list
hurrTopR <- reactive(
if(input$hurrTop == "All"){
data2005
}
)
#amber: this is the other part
#PLOT THE DATA: ---- insert data components here (in any order): -------------------------------------------
data2005$year <- data2005$date
data2005$year <- as.character(data2005$year)
userReactive <- reactive({subset(data2005, data2005$year) == input$hurrYear )})
# Number of Hurricanes per year
output$bargraph1 <- renderPlot({
hurPerYearReactive <- userReactive()
ggplot(hurPerYearReactive, aes(x = year)) +
xlab("Year") + ylab("Number of Hurricanes")) }
) # End bargraph1
# Hurricanes with respect to their max speed
output$bargraph2 <- renderPlot({
ggplot(data = barChartData, aes(x = column4)) +
geom_bar(stat="bin", colour="black", fill="#DD8888",) +
xlab("Max Speed") + ylab("Number of Hurricanes") +
theme(text = element_text(size = 25)) }
) # End bargraph2
# Hurricanes with respect to their max category
output$bargraph3 <- renderPlot({
ggplot(data = barChartData, aes(x = column5)) +
geom_bar(stat="count", colour="black", fill="#DD8888",) +
xlab("Max Category") + ylab("Number of Hurricanes") +
theme(text = element_text(size = 24))
}
) # End bargraph3
# Stacked Bar Graph Displaying Num of Hurricane Including Categories since 2005
output$bargraph4 <- renderPlot({
(ggplot(data = barChartData, aes(x = column3, fill = column5)) +
geom_bar(position ="stack", stat = "count")
+ xlab("Year") + ylab("Number of Hurricanes") +
scale_fill_brewer(palette = 10) +
theme(text = element_text(size = 25))
) # end ggplot
}
) # End bargraph4
square <- function(x) {  #square of a number
return(x * x)
#Charly S: Do we need this function, wanting to remove it
}
# add a leaflet map
output$leaf <- renderLeaflet({
#get reactive data:
reactData <- filter() #filter data
# Create a continuous palette function (from leaflet documentation)
pal <- colorNumeric(
palette = "Reds",
domain = reactData$max_speed)
#map object
map <- leaflet(data = reactData) %>%
addTiles() %>%
addProviderTiles(mapRenderings[[input$mapRender]]) %>%
setView(lng = -75.9, lat = 39.1, zoom = 3) %>%
addCircles(
lng = reactData$lon, lat = reactData$lat,
color = pal(reactData$max_speed),
radius = 2,
weight = reactData$max_speed / 3.5,    #1->5   2->20   3->40
label = paste(reactData$hur_name, ": ", reactData$max_speed, " knots, ", reactData$min_pressure, " mbar, on",
month(reactData$date), "/", day(reactData$date), "/", year(reactData$date), " @ ", reactData$time
),
labelOptions = labelOptions(textOnly = TRUE, direction = "top",
style = list(
"color" = "black",
# "font-style" = "italic",
"box-shadow" = "3px 3px 3px rgba(0,0,0,1)",
"font-size" = "10px",
"background-color" =  "white"
)
)
)
map   #run map
})
#add a table
output$hurrTable <- DT::renderDataTable(
DT::datatable({
filter() #use filtered data
},
options = list(searching = TRUE, pageLength = 10, lengthChange = FALSE
), rownames = FALSE
)
)
#add line graph for max wind speed
output$maxWindSpeed <-renderPlot({
maxASpeed <- filterWindA()
maxNSpeed <- filterWindN()
if(nrow(maxNSpeed) ==0){
graph = ggplot() +
geom_line(data=maxASpeed, aes(x=date,y=max_speed, colour="Atlantic")) +
scale_colour_manual("",
breaks = c("Atlantic"),
values = c("red"))+
xlab("Dates")+
ylab("Max Wind Speed")+
ggtitle(paste("Wind Speed for Year ",input$hurrYear))
graph
}
else{
graph = ggplot() +
geom_line(data=maxASpeed, aes(x=date,y=max_speed, colour="Atlantic")) +
geom_line(data=maxNSpeed, aes(x=date,y=max_speed, colour="North")) +
scale_colour_manual("",
breaks = c("Atlantic","North"),
values = c("red","blue"))+
xlab("Dates")+
ylab("Max Wind Speed")+
ggtitle(paste("Wind Speed for Year ",input$hurrYear))
graph
}
}) # End line graph for max wind speed
output$minPressure <-renderPlot({
minASpeed <-filterMinA()
minNSpeed <- filterMinN()
if(nrow(minNSpeed) == 0 ){
graph = ggplot() +
geom_line(data=minASpeed, aes(x=date,y=min_pressure, colour="Atlantic")) +
scale_colour_manual("",
breaks = c("Atlantic"),
values = c("red"))+
xlab("Dates")+
ylab("Max Wind Speed")+
ggtitle(paste("Min Pressure for the year of ",input$hurrYear))
graph
}
else{
graph = ggplot() +
geom_line(data=minASpeed, aes(x=date,y=min_pressure, colour="Atlantic")) +
geom_line(data=minNSpeed, aes(x=date,y=min_pressure, colour="North")) +
scale_colour_manual("",
breaks = c("Atlantic","North"),
values = c("red","blue"))+
xlab("Dates")+
ylab("Max Wind Speed")+
ggtitle(paste("Min Pressure for the year of ",input$hurrYear))
graph
}
})
# output$value <- renderText({ input$somevalue })     #text output
#data components above  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
}
shinyApp(ui = ui, server = server)
